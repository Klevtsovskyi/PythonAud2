

# D1 = |5| = 5
# D2 = |5 3| = 25 - 6 = 19
#      |2 5|
# D(i) = |5 3 0 0 ... 0 0| = 5 * |5 3 0 ... 0 0| - 3 * |2 3 0 ... 0 0| =
#        |2 5 3 0 ... 0 0|       |2 5 3 ... 0 0|       |0 5 3 ... 0 0|
#        |0 2 5 3 ... 0 0|       |.............|       |.............|
#        |...............|       |0 0 0 ... 2 5|       |0 0 0 ... 2 5|
#        |0 0 0 0 ... 2 5|
#
# = 5 * D(i-1) - 6 * D(i-2)

def fun(n):
    d1 = 5
    d2 = 19
    for i in range(1, n):
        d1, d2 = d2, 5 * d2 - 6 * d1
    return d1


def gen():
    d1 = 5
    d2 = 19
    while True:
        yield d1
        d1, d2 = d2, 5 * d2 - 6 * d1


if __name__ == '__main__':
    n = 10
    i = 1
    for rez in gen():
        print(rez)
        i += 1
        if i > n:
            break
